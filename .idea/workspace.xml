<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5aa47541-bb31-4274-b150-6ef96ea73879" name="Changes" comment="Migrating to microservices" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="1-refactoring-from-monolith" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;ahimsarijalu&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ahimsarijalu/extrack-microservice.git&quot;,
    &quot;accountId&quot;: &quot;c23c8104-844a-46c8-b16e-559b9d205a76&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$MAVEN_REPOSITORY$/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar!/com/netflix/discovery/DiscoveryClient.class" root0="SKIP_INSPECTION" />
    <setting file="jar://$MAVEN_REPOSITORY$/com/netflix/eureka/eureka-client/2.0.4/eureka-client-2.0.4.jar!/com/netflix/discovery/shared/transport/decorator/RedirectingEurekaHttpClient.class" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2qcYkjQFPiC6y8upcTn7cOd6wiq" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.AuthServiceApplication.executor": "Run",
    "Application.ConfigServerApplication.executor": "Run",
    "Application.ConfigServiceApplication.executor": "Run",
    "Application.EurekaServiceApplication.executor": "Run",
    "Docker.docker-compose.yaml.auth-db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.auth-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.config-server: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.config-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.eureka-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.expense-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.fund-db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.fund-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.gateway-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Maven.extrack [clean,install].executor": "Run",
    "Maven.extrack [clean].executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "D:/Code/spring-boot/extrack-microservice/expense-service/src/main/java/com/ahimsarijalu/expense_service/utils",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "reference.settingsdialog.IDE.editor.colors.Color Scheme Font"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Code\spring-boot\extrack-microservice\expense-service\src\main\java\com\ahimsarijalu\expense_service\utils" />
      <recent name="D:\Code\spring-boot\extrack-microservice\expense-service\src\main\java\com\ahimsarijalu\expense_service" />
      <recent name="D:\Code\spring-boot\extrack-microservice\fund-service\src\main\java\com\ahimsarijalu\fund_service\utils" />
      <recent name="D:\Code\spring-boot\extrack-microservice\fund-service\src\main\java\com\ahimsarijalu\fund_service" />
      <recent name="D:\Code\spring-boot\extrack-microservice\auth-service\src\main\java\com\ahimsarijalu\auth_service\utils" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.ahimsarijalu.expense_service" />
      <recent name="com.ahimsarijalu.expense_service.dtos" />
      <recent name="com.ahimsarijalu.expense_service.utils" />
      <recent name="com.ahimsarijalu.expense_service.model" />
      <recent name="com.ahimsarijalu.fund_service" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean install" />
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker-compose.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.auth-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="services">
            <list>
              <option value="auth-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.expense-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="services">
            <list>
              <option value="expense-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.fund-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="services">
            <list>
              <option value="fund-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yaml.auth-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yaml.expense-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yaml.fund-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml.expense-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.fund-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.auth-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5aa47541-bb31-4274-b150-6ef96ea73879" name="Changes" comment="" />
      <created>1734963475733</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1734963475733</updated>
    </task>
    <task id="LOCAL-00001" summary="Migrating to microservices">
      <option name="closed" value="true" />
      <created>1735633562772</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1735633562773</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Migrating to microservices" />
    <option name="LAST_COMMIT_MESSAGE" value="Migrating to microservices" />
  </component>
</project>